#
# Docker-Compose - Menu Microservice
#

# @author - Benjamin Wong Wei En, Hao Jun Poon, Belle Lee, Chen Ziyi, Masturah Binte Sulaiman, Low Louis
# @team   - G3T4

version: '3.7'

services:

    rabbit_listener:
        image: benjaminwongweien/easydeliverybot
        container_name: rabbit_listener
        # ports:
        #     - "8000:8000"
        networks:
            - network
        # environment: 
        #     - ""
        volumes:
            - "./rabbit_listener:/app"
        command: ["python", "/app/rabbit_listener.py"]
        depends_on: 
            - bot_db

    register:
        image: benjaminwongweien/easydeliverybot
        container_name: register
        # ports:
        #     - "8000:8000"
        networks:
            - network
        # environment: 
        #     - ""
        volumes:
            - "./register:/app"
        command: ["python", "/app/register.py"]
        depends_on: 
            - bot_db

    updater:
        image: benjaminwongweien/easydeliverybot
        container_name: updater
        # ports:
        #     - "8000:8000"
        networks:
            - network
        # environment: 
        #     - ""
        volumes:
            - "./updater:/app"
        command: ["python", "/app/updater.py"]
        depends_on: 
            - bot_db

    vendor_broker:
        image: benjaminwongweien/easydeliverybot
        container_name: vendor_broker
        # ports:
        #     - "8000:8000"
        networks:
            - network
        # environment: 
        #     - ""
        volumes:
            - "./vendor_broker:/app"
        command: ["python", "/app/vendor_broker.py"]
        depends_on: 
            - bot_db

    driver_broker:
        image: benjaminwongweien/easydeliverybot
        container_name: driver_broker
        # ports:
        #     - "8000:8000"
        networks:
            - network
        # environment: 
        #     - ""
        volumes:
            - "./driver_broker:/app"
        command: ["python", "/app/driver_broker.py"]
        depends_on: 
            - bot_db
            
    bot_db:
        image: mysql
        container_name: bot_db
        ports:
            - "3311:3306"
        networks:
            - network
        environment:
            MYSQL_DATABASE: bot
            MYSQL_ROOT_PASSWORD: botdbpassword
            MYSQL_USER: botuser
            MYSQL_PASSWORD: botuserpassword
        # volumes:
        #     - ./mysql:/docker-entrypoint-initdb.d/
        command: --sql_mode=""
        # depends_on: 
        #     - -

networks:
    network: 
        driver: "bridge"